<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2017-2022  Koordinierungsstelle für IT-Standards (KoSIT)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.kosit</groupId>
  <artifactId>validationtool</artifactId>
  <version>1.5.1</version>
  <name>KoSIT XML Prüftool Implementierung</name>
  <description>KoSIT XML Validator against XSD and Schematron based on defined scenarios.</description>
  <url>https://github.com/itplr-kosit/validator</url>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <!-- In alphabetical order by last name -->
    <developer>
      <id>fabian.buettner</id>
      <name>Fabian Büttner</name>
      <organization>KoSIT</organization>
      <organizationUrl>http://www.xoev.de</organizationUrl>
    </developer>
    <developer>
      <id>renzo.kottmann</id>
      <name>Renzo Kottmann</name>
      <organization>KoSIT</organization>
      <organizationUrl>http://www.xeinkauf.de</organizationUrl>
      <roles>
        <role>Product Owner</role>
      </roles>
    </developer>
    <developer>
      <id>andreas.penski</id>
      <name>Andreas Penski</name>
      <organization>]init[ AG</organization>
      <organizationUrl>https://www.init.de</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:https://github.com/itplr-kosit/validationtool.git</connection>
    <developerConnection>scm:git:https://projekte.kosit.org/kosit/validator.git</developerConnection>
    <tag>v1.1.0</tag>
    <url>https://github.com/itplr-kosit/validator</url>
  </scm>
  <distributionManagement>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Nexus Release Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
    <site>
      <id>xoev</id>
      <url>https://www.xoev.de/</url>
    </site>
  </distributionManagement>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.java>8</version.java>
    <version.maven>3.6.3</version.maven>
    <!-- Dependencies -->
    <version.assertj-core>3.27.3</version.assertj-core>
    <version.checkstyle>10.23.1</version.checkstyle>
    <version.commons-io>2.19.0</version.commons-io>
    <version.commons-lang3>3.17.0</version.commons-lang3>
    <version.commons-text>1.13.1</version.commons-text>
    <version.httpcore>4.4.16</version.httpcore>
    <!-- Requires JDK 11 at run time -->
    <!-- <version.jakarta.xml.bind-api>4.0.2</version.jakarta.xml.bind-api> -->
    <!-- Requires JDK 8 at run time -->
    <version.jakarta.xml.bind-api>3.0.1</version.jakarta.xml.bind-api>
    <version.jansi>2.4.2</version.jansi>
    <!-- Requires JDK 11 at run time -->
    <!-- <version.jaxb-runtime>4.0.5</version.jaxb-runtime> -->
    <!-- Requires JDK 8 at run time -->
    <version.jaxb-runtime>3.0.2</version.jaxb-runtime>
    <version.junit-jupiter-api>5.12.2</version.junit-jupiter-api>
    <version.lombok>1.18.38</version.lombok>
    <version.mockito-core>5.17.0</version.mockito-core>
    <version.packaged-test-scenarios>1.0.2</version.packaged-test-scenarios>
    <version.picocli>4.7.7</version.picocli>
    <version.pmd>7.13.0</version.pmd>
    <version.rest-assured>5.5.1</version.rest-assured>
    <version.rewrite-logging-frameworks>3.8.0</version.rewrite-logging-frameworks>
    <version.rewrite-migrate-java>3.9.0</version.rewrite-migrate-java>
    <version.rewrite-static-analysis>2.9.0</version.rewrite-static-analysis>
    <version.rewrite-testing-frameworks>3.8.0</version.rewrite-testing-frameworks>
    <version.saxon-he>12.6</version.saxon-he>
    <version.slf4j-api>2.0.17</version.slf4j-api>
    <version.slf4j-simple>2.0.17</version.slf4j-simple>
    <!-- Plugins -->
    <version.build-helper-maven-plugin>3.6.0</version.build-helper-maven-plugin>
    <version.cyclonedx-maven-plugin>2.9.1</version.cyclonedx-maven-plugin>
    <version.dependency-check-maven>12.1.1</version.dependency-check-maven>
    <version.exec-maven-plugin>3.5.0</version.exec-maven-plugin>
    <!-- Requires JDK 17 at compile time -->
    <!-- <version.formatter-maven-plugin>2.26.0</version.formatter-maven-plugin> -->
    <!-- Requires JDK 11 at compile time -->
    <version.formatter-maven-plugin>2.23.0</version.formatter-maven-plugin>
    <version.jacoco-maven-plugin>0.8.13</version.jacoco-maven-plugin>
    <version.jaxb-maven-plugin>4.0.9</version.jaxb-maven-plugin>
    <version.jaxb-plugins>4.0.9</version.jaxb-plugins>
    <version.maven-antrun-plugin>3.1.0</version.maven-antrun-plugin>
    <version.maven-assembly-plugin>3.7.1</version.maven-assembly-plugin>
    <version.maven-checkstyle-plugin>3.6.0</version.maven-checkstyle-plugin>
    <version.maven-compiler-plugin>3.14.0</version.maven-compiler-plugin>
    <version.maven-dependency-plugin>3.8.1</version.maven-dependency-plugin>
    <version.maven-enforcer-plugin>3.5.0</version.maven-enforcer-plugin>
    <version.maven-failsafe-plugin>3.5.3</version.maven-failsafe-plugin>
    <version.maven-gpg-plugin>3.2.7</version.maven-gpg-plugin>
    <version.maven-javadoc-plugin>3.11.2</version.maven-javadoc-plugin>
    <version.maven-jxr-plugin>3.6.0</version.maven-jxr-plugin>
    <version.maven-pmd-plugin>3.26.0</version.maven-pmd-plugin>
    <version.maven-project-info-reports-plugin>3.9.0</version.maven-project-info-reports-plugin>
    <version.maven-release-plugin>3.1.1</version.maven-release-plugin>
    <version.maven-resources-plugin>3.3.1</version.maven-resources-plugin>
    <version.maven-shade-plugin>3.6.0</version.maven-shade-plugin>
    <version.maven-site-plugin>3.21.0</version.maven-site-plugin>
    <version.maven-source-plugin>3.3.1</version.maven-source-plugin>
    <version.maven-surefire-plugin>3.5.3</version.maven-surefire-plugin>
    <version.rewrite-maven-plugin>6.8.0</version.rewrite-maven-plugin>
    <version.spotbugs-maven-plugin>4.9.3.0</version.spotbugs-maven-plugin>
    <version.versions-maven-plugin>2.18.0</version.versions-maven-plugin>
  </properties>
  <dependencies>
    <!-- Compile -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${version.commons-io}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>${version.saxon-he}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${version.commons-lang3}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${version.slf4j-api}</version>
    </dependency>
    <!-- Optional -->
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${version.picocli}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>${version.jakarta.xml.bind-api}</version>
    </dependency>
    <dependency>
      <groupId>org.fusesource.jansi</groupId>
      <artifactId>jansi</artifactId>
      <version>${version.jansi}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>${version.jaxb-runtime}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${version.slf4j-simple}</version>
      <optional>true</optional>
    </dependency>
    <!-- Provided -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${version.lombok}</version>
      <scope>provided</scope>
    </dependency>
    <!-- Test -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>${version.commons-text}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>${version.httpcore}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.kosit.validationtool</groupId>
      <artifactId>packaged-test-scenarios</artifactId>
      <version>${version.packaged-test-scenarios}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${version.rest-assured}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${version.assertj-core}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${version.junit-jupiter-api}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${version.mockito-core}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <!--
  <repositories>
    <repository>
      <id>project.local</id>
      <name>project</name>
      <url>file:${project.basedir}/libs</url>
    </repository>
  </repositories>
  -->
  <build>
    <resources>
      <resource>
        <directory>src/main/model</directory>
      </resource>
      <resource>
        <!-- for logging and app info properties -->
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${version.spotbugs-maven-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${version.maven-checkstyle-plugin}</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${version.checkstyle}</version>
          </dependency>
        </dependencies>
        <configuration>
          <consoleOutput>false</consoleOutput>
          <failOnViolation>false</failOnViolation>
          <linkXRef>true</linkXRef>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${version.maven-dependency-plugin}</version>
        <executions>
          <execution>
            <id>analyze</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <failOnWarning>false</failOnWarning>
              <verbose>true</verbose>
            </configuration>
          </execution>
          <execution>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeScope/>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <usedDependencies>
            <dependency>org.glassfish.jaxb:jaxb-runtime</dependency>
            <dependency>de.kosit.validationtool:packaged-test-scenarios</dependency>
          </usedDependencies>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${version.maven-jxr-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${version.maven-pmd-plugin}</version>
        <dependencies>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>${version.pmd}</version>
          </dependency>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-java</artifactId>
            <version>${version.pmd}</version>
          </dependency>
        </dependencies>
        <configuration>
          <minimumTokens>100</minimumTokens>
          <targetJdk>${version.java}</targetJdk>
          <excludes>
            <exclude>**/*Bean.java</exclude>
            <exclude>**/generated/*.java</exclude>
          </excludes>
          <excludeRoots>
            <excludeRoot>${project.build.directory}/generated-sources/stubs</excludeRoot>
          </excludeRoots>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${version.maven-project-info-reports-plugin}</version>
      </plugin>
      <!-- for PR 152 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${version.maven-resources-plugin}</version>
        <configuration>
          <propertiesEncoding>ISO-8859-1</propertiesEncoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${version.build-helper-maven-plugin}</version>
        <executions>
          <execution>
            <id>reserve-network-port</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <portNames>
                <portName>validator.server.port</portName>
                <portName>jacoco.tcp.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${version.maven-enforcer-plugin}</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${version.maven}</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.maven-compiler-plugin}</version>
        <configuration>
          <release>${version.java}</release>
          <encoding>UTF-8</encoding>
          <compilerArgs>
            <arg>${compiler.verbosearg}</arg>
            <arg>${compiler.xlintarg}</arg>
            <arg>${compiler.warg}</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${version.maven-shade-plugin}</version>
        <executions>
          <execution>
            <id>jdk11+</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>standalone</shadedClassifierName>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>de.kosit.validationtool.cmd.CommandLineApplication</mainClass>
                </transformer>
              </transformers>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>**/module-info.class</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
          <execution>
            <id>jdk8</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>java8-standalone</shadedClassifierName>
              <!--
              <artifactSet>
                <excludes>
                  <exclude>org.glassfish.jaxb:jaxb-runtime</exclude>
                  <exclude>com.sun.istack:istack-commons-runtime</exclude>
                  <exclude>com.sun.xml.fastinfoset:FastInfoset</exclude>
                  <exclude>jakarta.activation:jakarta.activation-api</exclude>
                  <exclude>jakarta.xml.bind:jakarta.xml.bind-api</exclude>
                  <exclude>org.jvnet.staxex:stax-ex</exclude>
                  <exclude>org.glassfish.jaxb:txw2</exclude>
                </excludes>
              </artifactSet>
              -->
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>de.kosit.validationtool.cmd.CommandLineApplication</mainClass>
                </transformer>
              </transformers>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>**/module-info.class</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${version.maven-assembly-plugin}</version>
        <executions>
          <execution>
            <id>full_dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/assembly-dist.xml</descriptor>
              </descriptors>
              <attach>true</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <outputDirectory>target/</outputDirectory>
              <workDirectory>target/assembly/full</workDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Generate model classes -->
      <plugin>
        <groupId>org.jvnet.jaxb</groupId>
        <artifactId>jaxb-maven-plugin</artifactId>
        <version>${version.jaxb-maven-plugin}</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <extension>true</extension>
          <schemaDirectory>src/main/model/xsd</schemaDirectory>
          <bindingDirectory>src/main/model/binding</bindingDirectory>
          <packageLevelAnnotations>false</packageLevelAnnotations>
          <args>
            <arg>-Xinheritance</arg>
            <arg>-Xannotate</arg>
          </args>
          <plugins>
            <plugin>
              <groupId>org.jvnet.jaxb</groupId>
              <artifactId>jaxb-plugins</artifactId>
              <version>${version.jaxb-plugins}</version>
            </plugin>
            <plugin>
              <groupId>org.jvnet.jaxb</groupId>
              <artifactId>jaxb-plugin-annotate</artifactId>
              <version>${version.jaxb-plugins}</version>
            </plugin>
          </plugins>
        </configuration>
      </plugin>
      <!-- Integrate code coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.jacoco-maven-plugin}</version>
        <configuration>
          <excludes>
            <exclude>**/validationtool/model/**</exclude>
            <exclude>**/validationtool/cmd/assertions/**</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>prepareJacocoSurefireArgLine</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>jacocoSurefire</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>prepareJacocoFailsafeArgLine</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>jacocoFailsafe</propertyName>
              <output>tcpserver</output>
              <address>localhost</address>
              <port>${jacoco.tcp.port}</port>
            </configuration>
          </execution>
          <execution>
            <id>dump</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>dump</goal>
            </goals>
            <configuration>
              <address>localhost</address>
              <port>${jacoco.tcp.port}</port>
              <append>true</append>
            </configuration>
          </execution>
          <execution>
            <id>generateJacocoReport</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.maven-surefire-plugin}</version>
        <configuration>
          <!-- suppress MavenModelInspection -->
          <argLine>-Dfile.encoding=UTF-8 ${jacocoSurefire}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${version.maven-source-plugin}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${version.maven-release-plugin}</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${version.exec-maven-plugin}</version>
        <executions>
          <execution>
            <id>run</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>java</executable>
          <longClasspath>false</longClasspath>
          <async>true</async>
          <asyncDestroyOnShutdown>true</asyncDestroyOnShutdown>
          <arguments>
            <!-- suppress MavenModelInspection -->
            <argument>${jacocoFailsafe}</argument>
            <argument>-Xmx128m</argument>
            <argument>-classpath</argument>
            <classpath/>
            <argument>de.kosit.validationtool.cmd.CommandLineApplication</argument>
            <argument>-s</argument>
            <argument>${project.build.testOutputDirectory}/examples/simple/scenarios.xml</argument>
            <argument>-r</argument>
            <argument>${project.build.testOutputDirectory}/examples/simple/repository</argument>
            <argument>-P</argument>
            <argument>${validator.server.port}</argument>
            <argument>-D</argument>
          </arguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${version.maven-antrun-plugin}</version>
        <configuration>
          <target>
            <!-- schlafen um den Start des Daemon abzuwarten -->
            <sleep seconds="10"/>
            <echo>${jacoco.tcp.port}</echo>
          </target>
        </configuration>
        <executions>
          <execution>
            <id>sleep-for-a-while</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${version.maven-failsafe-plugin}</version>
        <executions>
          <execution>
            <id>test-it</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <!-- suppress MavenModelInspection -->
              <argLine>-Dfile.encoding=UTF-8 -Ddaemon.port=${validator.server.port}</argLine>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${version.maven-javadoc-plugin}</version>
        <configuration>
          <release>${version.java}</release>
          <doclint>none</doclint>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${version.maven-site-plugin}</version>
      </plugin>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <version>${version.formatter-maven-plugin}</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>validate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <configFile>${project.basedir}/formatter.xml</configFile>
          <lineEnding>LF</lineEnding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${version.versions-maven-plugin}</version>
        <configuration>
          <ruleSet>
            <ignoreVersions>
              <ignoreVersion>
                <type>regex</type>
                <version>(?i).+[-.](alpha|beta|rc\d|m\d|pre\d).*</version>
              </ignoreVersion>
            </ignoreVersions>
          </ruleSet>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.cyclonedx</groupId>
        <artifactId>cyclonedx-maven-plugin</artifactId>
        <version>${version.cyclonedx-maven-plugin}</version>
        <executions>
          <execution>
            <id>default</id>
            <phase>package</phase>
            <goals>
              <goal>makeBom</goal>
            </goals>
            <configuration>
              <skip>true</skip>
            </configuration>
          </execution>
          <execution>
            <id>aggregate</id>
            <inherited>false</inherited>
            <phase>package</phase>
            <goals>
              <goal>makeAggregateBom</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <outputFormat>xml</outputFormat>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.openrewrite.maven</groupId>
        <artifactId>rewrite-maven-plugin</artifactId>
        <version>${version.rewrite-maven-plugin}</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>dryRunNoFork</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-logging-frameworks</artifactId>
            <version>${version.rewrite-logging-frameworks}</version>
          </dependency>
          <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-migrate-java</artifactId>
            <version>${version.rewrite-migrate-java}</version>
          </dependency>
          <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-static-analysis</artifactId>
            <version>${version.rewrite-static-analysis}</version>
          </dependency>
          <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-testing-frameworks</artifactId>
            <version>${version.rewrite-testing-frameworks}</version>
          </dependency>
        </dependencies>
        <configuration>
          <activeRecipes>
            <recipe>org.openrewrite.maven.BestPractices</recipe>
            <recipe>org.openrewrite.maven.ModernizeObsoletePoms</recipe>
            <recipe>org.openrewrite.maven.OrderPomElements</recipe>
            <!-- <recipe>org.openrewrite.java.OrderImports</recipe> -->
            <recipe>org.openrewrite.java.RemoveUnusedImports</recipe>
            <recipe>org.openrewrite.java.ShortenFullyQualifiedTypeReferences</recipe>
            <!-- <recipe>org.openrewrite.java.format.AutoFormat</recipe> -->
            <recipe>org.openrewrite.java.format.BlankLines</recipe>
            <recipe>org.openrewrite.java.format.EmptyNewlineAtEndOfFile</recipe>
            <recipe>org.openrewrite.java.format.MethodParamPad</recipe>
            <recipe>org.openrewrite.java.format.NoWhitespaceAfter</recipe>
            <recipe>org.openrewrite.java.format.NoWhitespaceBefore</recipe>
            <recipe>org.openrewrite.java.format.NormalizeFormat</recipe>
            <recipe>org.openrewrite.java.format.NormalizeLineBreaks</recipe>
            <recipe>org.openrewrite.java.format.NormalizeTabsOrSpaces</recipe>
            <recipe>org.openrewrite.java.format.RemoveTrailingWhitespace</recipe>
            <recipe>org.openrewrite.java.format.SingleLineComments</recipe>
            <recipe>org.openrewrite.java.format.Spaces</recipe>
            <!-- <recipe>org.openrewrite.java.format.TabsAndIndents</recipe> -->
            <recipe>org.openrewrite.java.format.TypecastParenPad</recipe>
            <recipe>org.openrewrite.java.format.WrappingAndBraces</recipe>
            <recipe>org.openrewrite.java.logging.PrintStackTraceToLogError</recipe>
            <recipe>org.openrewrite.java.logging.slf4j.Slf4jBestPractices</recipe>
            <recipe>org.openrewrite.java.migrate.UpgradeToJava8</recipe>
            <!-- <recipe>org.openrewrite.java.migrate.Java8toJava11</recipe> -->
            <recipe>org.openrewrite.java.testing.junit5.JUnit4to5Migration</recipe>
            <recipe>org.openrewrite.java.testing.junit5.JUnit5BestPractices</recipe>
            <recipe>org.openrewrite.staticanalysis.CovariantEquals</recipe>
            <!-- <recipe>org.openrewrite.staticanalysis.FinalizeLocalVariables</recipe> -->
            <recipe>org.openrewrite.staticanalysis.HideUtilityClassConstructor</recipe>
            <recipe>org.openrewrite.staticanalysis.UnnecessaryParentheses</recipe>
          </activeRecipes>
          <activeStyles>
            <style>org.openrewrite.java.IntelliJ</style>
          </activeStyles>
          <checkstyleDetectionEnabled>false</checkstyleDetectionEnabled>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${version.spotbugs-maven-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${version.maven-checkstyle-plugin}</version>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
          <reportSet>
            <id>aggregate</id>
            <inherited>false</inherited>
            <reports>
              <report>checkstyle-aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
        <configuration>
          <consoleOutput>false</consoleOutput>
          <failOnViolation>false</failOnViolation>
          <linkXRef>true</linkXRef>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${version.maven-javadoc-plugin}</version>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
          <reportSet>
            <id>aggregate</id>
            <inherited>false</inherited>
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${version.maven-jxr-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${version.maven-pmd-plugin}</version>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>pmd</report>
              <report>cpd</report>
            </reports>
          </reportSet>
          <reportSet>
            <id>aggregate</id>
            <inherited>false</inherited>
            <reports>
              <report>aggregate-pmd</report>
              <report>aggregate-cpd</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${version.maven-surefire-plugin}</version>
        <configuration>
          <showSuccess>true</showSuccess>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.jacoco-maven-plugin}</version>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <id>format</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>net.revelc.code.formatter</groupId>
            <artifactId>formatter-maven-plugin</artifactId>
            <version>${version.formatter-maven-plugin}</version>
            <executions>
              <execution>
                <id>maven-formatting</id>
                <phase>initialize</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <configFile>${project.basedir}/formatter.xml</configFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>owasp-check</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${version.dependency-check-maven}</version>
            <configuration>
              <failBuildOnCVSS>0</failBuildOnCVSS>
              <suppressionFiles>
                <suppressionFile>${project.basedir}/owasp-suppressions.xml</suppressionFile>
              </suppressionFiles>
            </configuration>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${version.maven-gpg-plugin}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
